name: Intelligent Code Review
# Enable manual trigger
on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize]

    # Avoid running the same workflow on the same branch concurrently
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  review:
    runs-on: ubuntu-latest
    environment: OpenAI_Intelligent_DevOps

    permissions:
      # read repository contents and write pull request comments
      id-token: write
      # allow github action bot to push new content into existing pull requests
      contents: write
      # contents: read
      pull-requests: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install dependencies @actions/core and @actions/github
      run: |
        npm install @actions/core
        npm install @actions/github
      shell: bash

    # check if required dependencies @actions/core and @actions/github are installed
    - name: Check if required dependencies are installed
      run: |
        npm list @actions/core
        npm list @actions/github
      shell: bash

    - name: Debug GitHub Token and environment variables
      run: |
        if [ -n "${{ secrets.GITHUB_TOKEN }}" ]; then
          echo "GitHub Token is set"
        else
          echo "GitHub Token is not set"
        fi

    - name: Find PR template
      id: pr_template
      run: |
        TEMPLATE_PATH=""
        if [ -f .github/pull_request_template.md ]; then
          TEMPLATE_PATH=".github/pull_request_template.md"
        elif [ -f pull_request_template.md ]; then
          TEMPLATE_PATH="pull_request_template.md"
        elif [ -f .github/PULL_REQUEST_TEMPLATE/pull_request_template.md ]; then
          TEMPLATE_PATH=".github/PULL_REQUEST_TEMPLATE/pull_request_template.md"
        fi
        if [ -n "$TEMPLATE_PATH" ]; then
          TEMPLATE_B64=$(base64 -w 0 "$TEMPLATE_PATH")
          echo "template_b64=$TEMPLATE_B64" >> $GITHUB_OUTPUT
        else
          echo "template_b64=" >> $GITHUB_OUTPUT
        fi

    - name: Intelligent GitHub Actions
      uses: tomomi-code/genai-pr-description@use-pr-template
      with:
        # Automatic Provision: The GITHUB_TOKEN is automatically created and provided by GitHub for each workflow run. You don't need to manually create or store this token as a secret.
        github-token: ${{ secrets.GITHUB_TOKEN }}

        azure-openai-api-key: ${{ secrets.AZURE_OPENAI_API_KEY }}
        azure-openai-endpoint: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
        azure-openai-api-version: ${{ secrets.AZURE_OPENAI_API_VERSION }}
        azure-openai-deployment: ${{ secrets.AZURE_OPENAI_DEPLOYMENT }}
        azure-openai-temperature: '0.7'
        pr-template-b64: ${{ steps.pr_template.outputs.template_b64 }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
